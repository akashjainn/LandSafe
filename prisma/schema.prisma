// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // Vercel Storage (Neon) injects POSTGRES_PRISMA_URL for Prisma
  url      = env("POSTGRES_PRISMA_URL")
}

model Flight {
  id             String   @id @default(cuid())
  carrierIata    String   // e.g., "DL"
  flightNumber   String   // e.g., "123"
  serviceDate    DateTime // local date at origin, stored as UTC midnight
  originIata     String?
  destIata       String?
  serviceType    String?  // e.g., scheduled, charter, codeshare, etc.
  createdAt      DateTime @default(now())
  createdBy      String?  // optional user identifier/email
  notes          String?  // "John's flight", "arrives with Sarah", etc.

  // denormalized latest snapshot for fast list render
  latestSchedDep DateTime?
  latestSchedArr DateTime?
  latestEstDep   DateTime?
  latestEstArr   DateTime?
  latestGateDep  String?
  latestGateArr  String?
  latestTerminalDep String?
  latestTerminalArr String?
  latestStatus   FlightStatusCode? @default(SCHEDULED)

  statuses       FlightStatusSnapshot[]
  schedules      Schedule[]
  opsStatuses    OpsStatus[]
  @@index([serviceDate, carrierIata, flightNumber])
}

enum FlightStatusCode {
  SCHEDULED
  BOARDING
  DEPARTED
  ENROUTE
  DIVERTED
  CANCELLED
  LANDED
  DELAYED
  UNKNOWN
}

model FlightStatusSnapshot {
  id            String           @id @default(cuid())
  flightId      String
  flight        Flight           @relation(fields: [flightId], references: [id])
  provider      String           // e.g., "AeroAPI"
  fetchedAt     DateTime         @default(now())
  schedDep      DateTime?
  schedArr      DateTime?
  estDep        DateTime?
  estArr        DateTime?
  actDep        DateTime?
  actArr        DateTime?
  gateDep       String?
  gateArr       String?
  terminalDep   String?
  terminalArr   String?
  status        FlightStatusCode @default(UNKNOWN)
  delayReason   String?
  aircraftType  String?
  routeKey      String?          // origin-dest cache key
}

model Schedule {
  id           String   @id @default(cuid())
  flightId     String
  flight       Flight   @relation(fields: [flightId], references: [id], onDelete: Cascade)
  schedDep     DateTime?
  schedArr     DateTime?
  equipment    String?
  gateDep      String?
  gateArr      String?
  terminalDep  String?
  terminalArr  String?
  source       String   @default("AeroDataBox")
  updatedAt    DateTime @updatedAt

  @@index([flightId])
}

model OpsStatus {
  id           String           @id @default(cuid())
  flightId     String
  flight       Flight           @relation(fields: [flightId], references: [id], onDelete: Cascade)
  status       FlightStatusCode @default(UNKNOWN)
  estDep       DateTime?
  estArr       DateTime?
  actOff       DateTime?
  actOn        DateTime?
  actDepGate   String?
  actArrGate   String?
  delayDepMin  Int?
  delayArrMin  Int?
  source       String           @default("AeroDataBox")
  updatedAt    DateTime         @updatedAt

  @@index([flightId])
}
